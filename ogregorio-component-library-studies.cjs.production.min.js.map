{"version":3,"file":"ogregorio-component-library-studies.cjs.production.min.js","sources":["../src/components/Text/index.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/components/buttonWithSound/index.tsx","../src/components/Breadcrumb/index.tsx","../src/components/NavigationLevel/index.tsx","../src/components/NavigationSpace/index.tsx","../src/components/TextLarge/index.tsx","../src/hooks/useAudio.ts","../src/hooks/useCopyToClipboard.ts","../src/hooks/useHandleKeyboard.ts","../src/hooks/useOutsideClick.ts","../src/hooks/useReadFromClipboard.ts"],"sourcesContent":["import React from 'react'\nimport type { ReactNode } from 'react';\n\nexport enum TextVariantEnum {\n  'default' = 'font-roboto-Condensed font-normal text-[2rem] tracking-[0%]',\n  'titleBreacrumb' = 'font-roboto-Condensed font-normal text-[32px] tracking-[10%]',\n  'button' = 'font-roboto-Condensed font-normal text-[24px] tracking-[10%]',\n  'mainMenu' = 'font-roboto-Condensed font-normal text-[28px] tracking-[7%]',\n  'basicItemMenu' = 'font-roboto-Condensed font-normal text-[28px] tracking-[5%]',\n  'textTitle' = 'font-roboto-Condensed font-normal text-[26px] tracking-[12%]',\n  'textDescription' = 'font-roboto-Condensed font-normal text-[24px] tracking-[12%]',\n}\n\nexport interface ITextProps {\n  children: ReactNode;\n  variant?: TextVariantEnum;\n  isActive?: boolean;\n  isDone?: boolean;\n}\n\nexport const Text = ({ children, variant = TextVariantEnum.default, isActive = false, isDone = false }: ITextProps) => {\n  const styleOnActive = isActive ? 'text-white' : 'text-white/70';\n  const styleIsDone = isDone ? 'line-through ' : '';\n\n  return (\n    <span\n      className={`${styleOnActive} ${styleIsDone} hover:text-white group-hover:text-white transition-all text-left duration-150 ${variant}`}>\n      {children}\n    </span>\n  );\n};\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport type { ReactNode } from 'react';\n// import HoverSound from './hoverSound.mp3'\n// import ClickSound from './clickSound.mp3'\n\nimport { Text, TextVariantEnum } from '../Text';\n// import { useAudio } from '../../hooks/useAudio';\n\ninterface IProps {\n  content: ReactNode;\n  isActive?: boolean;\n  onClick?: () => void;\n  variant?: TextVariantEnum;\n  isDone?: boolean;\n}\n\n\n\nexport const ButtonWithSound = ({\n  content,\n  isActive = false,\n  isDone = false,\n  onClick = () => {},\n  variant = undefined,\n}: IProps) => {\n  // const clickSound = useAudio(ClickSound);\n  // const hoverSound = useAudio(HoverSound);\n\n  const handleMouseEnter = () => {\n    // hoverSound.play();\n  };\n\n  const handleClick = () => {\n    onClick();\n    // clickSound.play();\n  };\n\n  return (\n    <button onMouseEnter={handleMouseEnter} onClick={handleClick} type=\"button\">\n      <Text variant={variant} isActive={isActive} isDone={isDone}>\n        {content}\n      </Text>\n    </button>\n  );\n};\n","import React from 'react';\nimport { ButtonWithSound } from '../buttonWithSound';\nimport { Text, TextVariantEnum } from '../Text';\n\ninterface IBreadcrumbProps {\n  content: string;\n  onReturns?: () => void;\n}\n\nexport const Breadcrumb = ({\n  content,\n  onReturns = () => {},\n}: IBreadcrumbProps) => {\n  return (\n    <div className=\"flex items-center animate-fadeIn\">\n      <ButtonWithSound\n        onClick={() => onReturns()}\n        variant={TextVariantEnum.titleBreacrumb}\n        content=\"INICIO\"\n      />\n\n      <div className=\"h-[25px] w-[2px] bg-white/70 mx-[24px]\" />\n      <Text variant={TextVariantEnum.titleBreacrumb}>{content}</Text>\n      <div className=\"flex-1 bg-white/70 h-[2px] ml-[48px]\" />\n    </div>\n  );\n};\n","import React from 'react'\nimport type { ReactNode } from 'react';\n\ntype levelsType = 1 | 2 | 3 | 4 | 5;\n\ninterface IProps {\n  level: levelsType;\n  children: ReactNode;\n}\n\nexport const NavigationLevel = ({ children, level }: IProps) => {\n  const styleLevels: { [key in levelsType]: string } = {\n    1: 'ml-[40px]',\n    2: 'ml-[80px]',\n    3: 'ml-[120px]',\n    4: 'ml-[160px]',\n    5: 'ml-[200px]',\n  };\n  return <div className={styleLevels[level]}>{children}</div>;\n};\n","import type { ReactNode } from 'react';\nimport React from 'react'\n\ninterface IProps {\n  children?: ReactNode;\n}\n\nexport const NavigationSpace = ({ children = undefined }: IProps) => {\n  return <div className=\"mt-[26px]\">{children}</div>;\n};\n","import React from 'react'\nimport type { ReactNode } from 'react';\n\nexport const TextLarge = ({ children }: { children: ReactNode }) => {\n  return <p className=\"text-white font-roboto text-[1rem] font-normal mt-[12px] text-left\">{children}</p>;\n};\n","export const useAudio = (src?: string) => {\n  const audioItem = new Audio(src);\n  console.log('SRC ITEMS ', src);\n  const play = () => {\n    audioItem.volume = 0.2;\n    audioItem.play();\n  };\n\n  return {\n    play,\n  };\n};\n","import { useState, useCallback } from 'react';\n\nconst TIME_IN_MS = 2000;\n\ninterface IResponseType {\n  copy: (text: string) => void;\n  isCopied: boolean;\n}\n\nexport const useCopyToClipboard = (): IResponseType => {\n  const [isCopied, setCopied] = useState(false);\n\n  const copy = useCallback((text: string) => {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        setCopied(true);\n        setTimeout(() => setCopied(false), TIME_IN_MS);\n      })\n      // eslint-disable-next-line no-console\n      .catch((err) => console.error('Error on copy text ', err));\n  }, []);\n\n  return { isCopied, copy };\n};\n","import { useEffect } from 'react';\n\nexport const useHandleKeyboard = (onPressKey: (key: string) => void) => {\n  useEffect(() => {\n    const handleKeyDown = (event: { key: string }) => {\n      onPressKey(event.key);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n};\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from 'react';\n\nexport const useOutsideClick = (ref: RefObject<HTMLDivElement>): { clickedOutside: boolean } => {\n  const [clickedOutside, setClickedOutside] = useState<boolean>(false);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent): void => {\n      const referencesContainTarget = (): boolean => !(ref.current && ref.current.contains(event.target as Node));\n      const clickedOutsideReference: boolean = (ref.current && referencesContainTarget()) || false;\n\n      setClickedOutside(clickedOutsideReference);\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return (): void => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref.current]);\n\n  return { clickedOutside };\n};\n","/* eslint-disable no-console */\nimport { useCallback } from 'react';\n\nexport const useReadFromClipboard = (): {\n  readClipboard: () => Promise<string>;\n} => {\n  const readClipboard = useCallback(async () => {\n    return navigator.clipboard\n      .readText()\n      .then(text => text)\n      .catch(err => {\n        console.error('Could not read clipboard: ', err);\n        return '';\n      });\n  }, []);\n\n  return { readClipboard };\n};\n"],"names":["TextVariantEnum","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Text","children","variant","default","isActive","isDone","React","className","ButtonWithSound","content","onClick","onMouseEnter","handleMouseEnter","handleClick","Breadcrumb","onReturns","titleBreacrumb","NavigationLevel","level","1","2","3","4","5","NavigationSpace","TextLarge","src","audioItem","Audio","console","log","play","volume","useCopyToClipboard","isCopied","setCopied","useState","copy","useCallback","text","navigator","clipboard","writeText","then","setTimeout","catch","err","error","onPressKey","useEffect","handleKeyDown","event","key","window","addEventListener","removeEventListener","clickedOutside","setClickedOutside","handleClickOutside","clickedOutsideReference","current","contains","target","useReadFromClipboard","readClipboard","async","readText"],"mappings":"0EAGYA,6ECHZ,SAAqBC,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAgC,oBAAbC,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,w4LDpBlCD,EAAAA,0BAAAA,mGAEVA,gFACAA,wEACAA,yEACAA,8EACAA,2EACAA,iFAUF,MAAagB,EAAOA,EAAGC,SAAAA,EAAUC,QAAAA,EAAUlB,wBAAgBmB,QAASC,SAAAA,GAAW,EAAOC,OAAAA,GAAS,KAK3FC,wBACEC,aALkBH,EAAW,aAAe,mBAC5BC,EAAS,gBAAkB,oFAIiFH,KAC3HD,GETMO,EAAkBA,EAC7BC,QAAAA,EACAL,SAAAA,GAAW,EACXC,OAAAA,GAAS,EACTK,QAAAA,EAAUA,SACVR,QAAAA,KAeEI,0BAAQK,aAVeC,OAUiBF,QANtBG,KAClBH,KAK8DjB,KAAK,UACjEa,gBAACN,GAAKE,QAASA,EAASE,SAAUA,EAAUC,OAAQA,GACjDI,uBC/BiBK,EACxBL,QAAAA,EACAM,UAAAA,EAAYA,YAGVT,uBAAKC,UAAU,oCACbD,gBAACE,GACCE,QAASA,IAAMK,IACfb,QAASlB,wBAAgBgC,eACzBP,QAAQ,WAGVH,uBAAKC,UAAU,2CACfD,gBAACN,GAAKE,QAASlB,wBAAgBgC,gBAAiBP,GAChDH,uBAAKC,UAAU,4FCbUU,EAAGhB,SAAAA,EAAUiB,MAAAA,KAQnCZ,uBAAKC,UAPyC,CACnDY,EAAG,YACHC,EAAG,YACHC,EAAG,aACHC,EAAG,aACHC,EAAG,cAE8BL,IAASjB,2BCXfuB,EAAGvB,SAAAA,KACzBK,uBAAKC,UAAU,aAAaN,oCCLZwB,EAAGxB,SAAAA,KACnBK,qBAAGC,UAAU,sEAAsEN,oBCJnEyB,IACvB,MAAMC,EAAY,IAAIC,MAAMF,GAO5B,OANAG,QAAQC,IAAI,aAAcJ,GAMnB,CACLK,KANWA,KACXJ,EAAUK,OAAS,GACnBL,EAAUI,qCCIoBE,KAChC,MAAOC,EAAUC,GAAaC,YAAS,GAavC,MAAO,CAAEF,SAAAA,EAAUG,KAXNC,cAAaC,IACxBC,UAAUC,UACPC,UAAUH,GACVI,KAAK,KACJR,GAAU,GACVS,WAAW,IAAMT,GAAU,GAfhB,OAkBZU,MAAOC,GAAQjB,QAAQkB,MAAM,sBAAuBD,KACtD,gCCnB6BE,IAChCC,YAAU,KACR,MAAMC,EAAiBC,IACrBH,EAAWG,EAAMC,MAKnB,OAFAC,OAAOC,iBAAiB,UAAWJ,GAE5B,KACLG,OAAOE,oBAAoB,UAAWL,KAEvC,6BCV2BhE,IAC9B,MAAOsE,EAAgBC,GAAqBrB,YAAkB,GAgB9D,OAdAa,YAAU,KACR,MAAMS,EAAsBP,IAC1B,MACMQ,EAAoCzE,EAAI0E,WADG1E,EAAI0E,SAAW1E,EAAI0E,QAAQC,SAASV,EAAMW,WACJ,EAEvFL,EAAkBE,IAIpB,OADAvE,SAASkE,iBAAiB,YAAaI,GAChC,KACLtE,SAASmE,oBAAoB,YAAaG,KAE3C,CAACxE,EAAI0E,UAED,CAAEJ,eAAAA,iCCjByBO,KAa3B,CAAEC,cAVa1B,cAAY2B,SACzBzB,UAAUC,UACdyB,WACAvB,KAAKJ,GAAQA,GACbM,MAAMC,IACLjB,QAAQkB,MAAM,6BAA8BD,GACrC,KAEV"}